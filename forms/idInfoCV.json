{
    "className": "org.joget.apps.form.model.Form",
    "elements": [
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.apps.form.lib.FileUpload",
                        "properties": {
                            "attachment": "",
                            "fileType": ".png;.jpeg;.jpg",
                            "fileTypeMsg": "Invalid file type",
                            "id": "idPhotot",
                            "label": "Photo :",
                            "maxSize": "",
                            "maxSizeMsg": "File size limit exceeded",
                            "multiple": "",
                            "padding": "",
                            "permissionType": "",
                            "readonly": "",
                            "removeFile": "",
                            "resizeHeight": "",
                            "resizeMethod": "",
                            "resizeQuality": "0.8",
                            "resizeWidth": "",
                            "size": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            }
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idTele",
                            "label": "Numéro de téléphone :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idAdress",
                            "label": "Adresse :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idLinkedin",
                            "label": "LinkedIn :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextArea",
                        "properties": {
                            "cols": "20",
                            "id": "idDescProfil",
                            "label": "Description de profil :",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "rows": "5",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.HiddenField",
                        "properties": {
                            "id": "forieginKey",
                            "useDefaultWhenEmpty": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "#currentUser.username#",
                            "workflowVariable": ""
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "infoPersonnel",
                "join": "",
                "label": "INFORMATION PERSONNELLE",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "idExperience",
                        "id": "idExperience",
                        "label": "Ajouter un expérience",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    \n    String recordId = \"#requestParam.id#\";\n  \n   \n    String sql = \"select c_idPoste,c_identrepris,c_idClient,c_idDateDebut,c_idDateFin,c_idDescription from app_fd_Experiences where c_idFKuser=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    \n    ResultSet rs = stmt.executeQuery();\n         \n   \n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"idPoste\", rs.getString(1));\n        r1.put(\"identrepris\", rs.getString(2));\n        r1.put(\"idClient\", rs.getString(3));\n        r1.put(\"idDateDebut\", rs.getString(4));\n        r1.put(\"idDateFin\", rs.getString(5));\n        r1.put(\"idDescription\", rs.getString(6));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n       \n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n          \n            UuidGenerator uuid = UuidGenerator.getInstance();\n             //String recordId = \"#requestParam.id#\";\n             \n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                String gridColumn3 = row.get(\"idFKuser\");\n                String gridColumn1 = row.get(\"idPoste\");\n                String gridColumn2 = row.get(\"identrepris\");\n                String gridColumn4 = row.get(\"idClient\");\n                String gridColumn5 = row.get(\"idDateDebut\");\n                String gridColumn6 = row.get(\"idDateFin\");\n                String gridColumn7 = row.get(\"idDescription\");\n                \n                \n                String insertSql = \"INSERT INTO app_fd_Experiences (id,c_idPoste,c_identrepris,c_idClient,c_idDateDebut,c_idDateFin,c_idDescription,c_idFKuser) VALUES (?,?,?,?,?,?,?,?);\";\n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn4);\n                stmtInsert.setString(5, gridColumn5);\n                stmtInsert.setString(6, gridColumn6);\n                stmtInsert.setString(7, gridColumn7);\n                stmtInsert.setString(8, gridColumn3);\n               \n                 \n               \n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "id_experience",
                "join": "",
                "label": "EXPÉRIENCE",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "id_formation",
                        "id": "idFormation",
                        "label": "Ajouter un Formation",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    \n    String recordId = \"#requestParam.id#\";\n  \n   \n    String sql = \"select c_idFormation,c_id_niveau,c_idDomaine,c_idEtablissement,c_idDateTerminer,c_idDescription from app_fd_formation where c_idFKuser=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    \n    ResultSet rs = stmt.executeQuery();\n         \n   \n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"idFormation\", rs.getString(1));\n        r1.put(\"id_niveau\", rs.getString(2));\n        r1.put(\"idDomaine\", rs.getString(3));\n        r1.put(\"idEtablissement\", rs.getString(4));\n        r1.put(\"idDateTerminer\", rs.getString(5));\n        r1.put(\"idDescription\", rs.getString(6));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n       \n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n          \n            UuidGenerator uuid = UuidGenerator.getInstance();\n             //String recordId = \"#requestParam.id#\";\n             \n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                //String gridColumn3 = recordId;\n                String gridColumn3 = row.get(\"idFKuser\");\n                String gridColumn1 = row.get(\"idFormation\");\n                String gridColumn2 = row.get(\"id_niveau\");\n                String gridColumn4 = row.get(\"idDomaine\");\n                String gridColumn5 = row.get(\"idEtablissement\");\n                String gridColumn6 = row.get(\"idDateTerminer\");\n                String gridColumn7 = row.get(\"idDescription\");\n                \n                \n                String insertSql = \"INSERT INTO app_fd_formation (id,c_idFormation,c_id_niveau,c_idDomaine,c_idEtablissement,c_idDateTerminer,c_idDescription,c_idFKuser) VALUES (?,?,?,?,?,?,?,?);\";\n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn4);\n                stmtInsert.setString(5, gridColumn5);\n                stmtInsert.setString(6, gridColumn6);\n                stmtInsert.setString(7, gridColumn7);\n                stmtInsert.setString(8, gridColumn3);\n               \n                 \n               \n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "idFormation",
                "join": "",
                "label": "FORMATION",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "idCompetence",
                        "id": "idCompetence",
                        "label": "Ajouter un compétence",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    \n    String recordId = \"#requestParam.id#\";\n  \n   \n    String sql = \"select c_idCompetence,c_idNiveau from app_fd_competence where c_idFKuser=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    \n    ResultSet rs = stmt.executeQuery();\n         \n   \n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"idCompetence\", rs.getString(1));\n        r1.put(\"idNiveau\", rs.getString(2));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n       \n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n          \n            UuidGenerator uuid = UuidGenerator.getInstance();\n             //String recordId = \"#requestParam.id#\";\n             \n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                //String gridColumn0 = recordId;\n                String gridColumn1 = row.get(\"idCompetence\");\n                String gridColumn2 = row.get(\"idNiveau\");\n                String gridColumn3 = row.get(\"idFKuser\");\n                \n                \n                String insertSql = \"INSERT INTO app_fd_competence (id,c_idCompetence,c_idNiveau,c_idFKuser) VALUES (?,?,?,?);\";\n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn3);\n                \n                \n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "idCompetence_1",
                "join": "",
                "label": "COMPÉTENCE",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "inLangue",
                        "id": "idLange",
                        "label": "Ajouter un Langue",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    \n    String recordId = \"#requestParam.id#\";\n  \n   \n    String sql = \"select c_idLangue,c_idNiveau from app_fd_Langue where c_idFKuser=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    \n    ResultSet rs = stmt.executeQuery();\n         \n   \n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"idLangue\", rs.getString(1));\n        r1.put(\"idNiveau\", rs.getString(2));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n       \n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n          \n            UuidGenerator uuid = UuidGenerator.getInstance();\n             //String recordId = \"#requestParam.id#\";\n             \n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                String gridColumn1 = row.get(\"idLangue\");\n                String gridColumn2 = row.get(\"idNiveau\");\n                String gridColumn3 = row.get(\"idFKuser\");\n                \n                \n                String insertSql = \"INSERT INTO app_fd_Langue (id,c_idLangue,c_idNiveau,c_idFKuser) VALUES (?,?,?,?);\";\n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn3);\n               \n                 \n               \n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "idLangue",
                "join": "",
                "label": "LANGUE",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.plugin.SectionWizard",
                    "properties": {
                        "clickableStep": "true",
                        "id": "field14",
                        "sections": "infoPersonnel,id_experience,idFormation,idCompetence_1,idLangue"
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "section6",
                "join": "",
                "label": "CV de #currentUser.username#",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        }
    ],
    "properties": {
        "description": "",
        "id": "idInfoCV",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "information professionnelles",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "info_personnel"
    }
}