{
    "className": "org.joget.apps.form.model.Form",
    "elements": [
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.apps.form.lib.FileUpload",
                        "properties": {
                            "attachment": "",
                            "fileType": ".png;.jpeg;.jpg",
                            "fileTypeMsg": "Invalid file type",
                            "id": "idPhotot",
                            "label": "Photo :",
                            "maxSize": "",
                            "maxSizeMsg": "File size limit exceeded",
                            "multiple": "",
                            "padding": "",
                            "permissionType": "",
                            "readonly": "",
                            "removeFile": "",
                            "resizeHeight": "",
                            "resizeMethod": "",
                            "resizeQuality": "0.8",
                            "resizeWidth": "",
                            "size": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            }
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idPrenom",
                            "label": "Prénom :",
                            "maxlength": "",
                            "permissionHidden": "",
                            "placeholder": "",
                            "readonly": "true",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "#currentUser.username#",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idNom",
                            "label": "Nom de famille :",
                            "maxlength": "",
                            "permissionHidden": "",
                            "placeholder": "",
                            "readonly": "true",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "#currentUser.firstName#",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idAdressEmail",
                            "label": "Adresse e-mail :",
                            "maxlength": "",
                            "permissionHidden": "",
                            "placeholder": "",
                            "readonly": "true",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "#currentUser.email#",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idTitre",
                            "label": "Titre d'emploi :",
                            "maxlength": "",
                            "permissionHidden": "",
                            "placeholder": "",
                            "readonly": "true",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "#currentUser.employee.jobTitle#",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idTele",
                            "label": "Numéro de téléphone :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idAdress",
                            "label": "Adresse :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idCodePostel",
                            "label": "Code postal :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idVille",
                            "label": "Ville :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "id": "idLinkedin",
                            "label": "LinkedIn :",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextArea",
                        "properties": {
                            "cols": "20",
                            "id": "idDescProfil",
                            "label": "Description de profil :",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "rows": "5",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "infoPersonnel",
                "join": "",
                "label": "information personnel",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "idCompetence",
                        "id": "idCompetence",
                        "label": "Ajouter un compétence",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    \n    String recordId = \"#requestParam.id#\";\n  \n   \n    String sql = \"select c_idCompetence,c_idNiveau from app_fd_competence where c_idFKuser=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    \n    ResultSet rs = stmt.executeQuery();\n         \n   \n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"idCompetence\", rs.getString(1));\n        r1.put(\"idNiveau\", rs.getString(2));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n       \n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n          \n            UuidGenerator uuid = UuidGenerator.getInstance();\n             String recordId = \"#requestParam.id#\";\n             \n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                String gridColumn1 = row.get(\"idCompetence\");\n                String gridColumn2 = row.get(\"idNiveau\");\n                String gridColumn3 = recordId;\n                \n                 \n                String insertSql = \"INSERT INTO app_fd_competence (id,c_idCompetence,c_idNiveau,c_idFKuser,app_fd_info_personnel_CV_id) VALUES (?,?,?,?,?);\";\n                 \n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn3);\n                stmtInsert.setString(5, gridColumn3);\n               \n                 \n               \n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "idCompetence_1",
                "join": "",
                "label": "Compétence",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "idExperience",
                        "id": "idExperience",
                        "label": "Ajouter un expérience",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n//Get Joget's current datasource configs\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    //Get the URL parameter\n    String recordId = \"#requestParam.id#\";\n  \n    //Here you can query from one or multiple tables using JOIN etc\n    String sql = \"select c_gridColumn1,c_gridColumn2,c_gridColumn3 from app_fd_grid where id=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    //Execute the SELECT SQL statement\n    ResultSet rs = stmt.executeQuery();\n         \n    //Get value from columns of record(s)\n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"gridColumn1\", rs.getString(1));\n        r1.put(\"gridColumn2\", rs.getString(2));\n        r1.put(\"gridColumn3\", rs.getString(3));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n        //Get Joget's current datasource configs\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n            //To generate new record IDs for storing into child table\n            UuidGenerator uuid = UuidGenerator.getInstance();\n             \n            //Iterate to add new records\n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                String gridColumn1 = row.get(\"gridColumn1\");\n                String gridColumn2 = row.get(\"gridColumn2\");\n                String gridColumn3 = row.get(\"gridColumn3\");\n                 \n                String insertSql = \"INSERT INTO app_fd_grid (id,c_gridColumn1,c_gridColumn2,c_gridColumn3) VALUES (?,?,?,?);\";\n                 \n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn3);\n                 \n                //Execute SQL statement\n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n \n//Process and store grid rows\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "id_experience",
                "join": "",
                "label": "Expérience professionnelle",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "id_formation",
                        "id": "idFormation",
                        "label": "Ajouter un Formation",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n//Get Joget's current datasource configs\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    //Get the URL parameter\n    String recordId = \"#requestParam.id#\";\n  \n    //Here you can query from one or multiple tables using JOIN etc\n    String sql = \"select c_gridColumn1,c_gridColumn2,c_gridColumn3 from app_fd_grid where id=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    //Execute the SELECT SQL statement\n    ResultSet rs = stmt.executeQuery();\n         \n    //Get value from columns of record(s)\n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"gridColumn1\", rs.getString(1));\n        r1.put(\"gridColumn2\", rs.getString(2));\n        r1.put(\"gridColumn3\", rs.getString(3));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n        //Get Joget's current datasource configs\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n            //To generate new record IDs for storing into child table\n            UuidGenerator uuid = UuidGenerator.getInstance();\n             \n            //Iterate to add new records\n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                String gridColumn1 = row.get(\"gridColumn1\");\n                String gridColumn2 = row.get(\"gridColumn2\");\n                String gridColumn3 = row.get(\"gridColumn3\");\n                 \n                String insertSql = \"INSERT INTO app_fd_grid (id,c_gridColumn1,c_gridColumn2,c_gridColumn3) VALUES (?,?,?,?);\";\n                 \n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn3);\n                 \n                //Execute SQL statement\n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n \n//Process and store grid rows\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "idFormation",
                "join": "",
                "label": "FORMATION",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [{
                    "className": "org.joget.SubformRepeater",
                    "properties": {
                        "addMode": "enable",
                        "collapsedByDefault": "",
                        "collapsible": "true",
                        "deleteMode": "enable",
                        "editFormDefId": "",
                        "editMode": "enable",
                        "enableSorting": "",
                        "errorMessage": "@@form.formgrid.invalidNumberOfRow@@",
                        "formDefId": "inLangue",
                        "id": "idLange",
                        "label": "Ajouter un Langue",
                        "loadBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "\nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \nFormRowSet f = new FormRowSet();\nf.setMultiRow(true);\n \n//Get Joget's current datasource configs\nDataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \ncon = ds.getConnection();\n \nif (!con.isClosed()) {\n    //Get the URL parameter\n    String recordId = \"#requestParam.id#\";\n  \n    //Here you can query from one or multiple tables using JOIN etc\n    String sql = \"select c_gridColumn1,c_gridColumn2,c_gridColumn3 from app_fd_grid where id=?\";\n    PreparedStatement stmt = con.prepareStatement(sql);\n    stmt.setString(1, recordId);\n  \n    //Execute the SELECT SQL statement\n    ResultSet rs = stmt.executeQuery();\n         \n    //Get value from columns of record(s)\n    while (rs.next()) {\n        FormRow r1 = new FormRow();\n        r1.put(\"gridColumn1\", rs.getString(1));\n        r1.put(\"gridColumn2\", rs.getString(2));\n        r1.put(\"gridColumn3\", rs.getString(3));\n        f.add(r1);\n    }\n}\n \nreturn f;"
                            }
                        },
                        "readonly": "",
                        "readonlyLabel": "",
                        "storeBinder": {
                            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                            "properties": {
                                "autoHandleFiles": "",
                                "autoHandleWorkflowVariable": "true",
                                "cacheInterval": "",
                                "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Form;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.commons.util.UuidGenerator;\n \npublic saveGridRows(Element element, FormRowSet rows, FormData formData) {\n     \n    String recordId = null;\n    Connection con = null;\n     \n    try {\n        //Get Joget's current datasource configs\n        DataSource ds = (DataSource) AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n \n        con = ds.getConnection();\n         \n        if(!con.isClosed()) {\n            //To generate new record IDs for storing into child table\n            UuidGenerator uuid = UuidGenerator.getInstance();\n             \n            //Iterate to add new records\n            Iterator i= rows.iterator();\n            while (i.hasNext()) {\n                FormRow row = (FormRow) i.next();\n                 \n                String pId = uuid.getUuid();\n                String gridColumn1 = row.get(\"gridColumn1\");\n                String gridColumn2 = row.get(\"gridColumn2\");\n                String gridColumn3 = row.get(\"gridColumn3\");\n                 \n                String insertSql = \"INSERT INTO app_fd_grid (id,c_gridColumn1,c_gridColumn2,c_gridColumn3) VALUES (?,?,?,?);\";\n                 \n                PreparedStatement stmtInsert = con.prepareStatement(insertSql);\n                 \n                stmtInsert.setString(1, pId);\n                stmtInsert.setString(2, gridColumn1);\n                stmtInsert.setString(3, gridColumn2);\n                stmtInsert.setString(4, gridColumn3);\n                 \n                //Execute SQL statement\n                stmtInsert.executeUpdate();\n            }\n        }\n    } catch (Exception ex) {\n        LogUtil.error(\"Your App/Plugin Name\", ex, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if (con != null) {\n                con.close();\n            }\n        } catch (Exception ex) {\n            LogUtil.error(\"Your App/Plugin Name\", ex, \"Error closing the jdbc connection\");\n        }\n    }\n}\n \n//Process and store grid rows\nsaveGridRows(element, rows, formData);\n"
                            }
                        },
                        "uniqueKey": "",
                        "validateMaxRow": "",
                        "validateMinRow": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        }
                    }
                }],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "idLangue",
                "join": "",
                "label": "Langue",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionReadonly": "",
                "readonly": "",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        }
    ],
    "properties": {
        "description": "",
        "id": "idInfoCV",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "information professionnelles",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "info_personnel_CV"
    }
}