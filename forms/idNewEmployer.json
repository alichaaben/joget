{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [{
                "className": "org.joget.apps.form.lib.TextField",
                "properties": {
                    "id": "id_description",
                    "label": "Description",
                    "maxlength": "",
                    "placeholder": "",
                    "readonly": "",
                    "readonlyLabel": "",
                    "size": "",
                    "storeNumeric": "",
                    "style": "",
                    "validator": {
                        "className": "",
                        "properties": {}
                    },
                    "value": "",
                    "workflowVariable": ""
                }
            }],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "comment": "",
            "id": "section1",
            "join": "",
            "label": "Nouvelle Employé",
            "loadBinder": {
                "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                "properties": {
                    "autoHandleFiles": "",
                    "autoHandleWorkflowVariable": "true",
                    "cacheInterval": "",
                    "script": "import org.joget.apps.form.model.*;\n \nFormRowSet f = new FormRowSet();\nFormRow r1 = new FormRow();\nr1.put(\"description\", \"hello world\");\nf.add(r1);\n \nreturn f;"
                }
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": "",
            "reverse": "",
            "storeBinder": {
                "className": "org.joget.apps.form.lib.BeanShellFormBinder",
                "properties": {
                    "autoHandleFiles": "",
                    "autoHandleWorkflowVariable": "true",
                    "cacheInterval": "",
                    "script": "import java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport javax.sql.DataSource;\nimport org.joget.apps.app.model.AppDefinition;\nimport org.joget.apps.app.service.AppService;\nimport org.joget.apps.app.service.AppUtil;\nimport org.joget.apps.form.model.Element;\nimport org.joget.apps.form.model.FormData;\nimport org.joget.apps.form.model.FormRow;\nimport org.joget.apps.form.model.FormRowSet;\nimport org.joget.apps.form.model.FormStoreBinder;\nimport org.joget.apps.form.service.FormUtil;\nimport org.joget.plugin.base.PluginManager;\nimport org.joget.commons.util.LogUtil;\n\n//this function will store rows data to external source using JDBC\npublic void storeUsingJDBC(Element element, FormRowSet rows, FormData formData, String id) {\n    Connection con = null;\n    try {\n        // retrieve connection from the default datasource\n        DataSource ds = (DataSource)AppUtil.getApplicationContext().getBean(\"setupDataSource\");\n        con = ds.getConnection();\n  \n        if (!con.isClosed()) {\n            //manually handle insert and update by checking the data is exist or not\n            String selectQuery = \"SELECT username FROM dir_user WHERE username=?\";\n            PreparedStatement stmt = con.prepareStatement(selectQuery);\n            stmt.setString(1, id);\n            ResultSet rs = stmt.executeQuery();\n  \n            Boolean isExist = false;\n            if (rs.next()) {\n                isExist = true;\n            }\n  \n            FormRow row = rows.get(0);\n  \n            if (isExist) {\n                String updateQuery = \"UPDATE dir_user SET firstName = ?, lastName = ?, email = ? WHERE username = ?\";\n                PreparedStatement ustmt = con.prepareStatement(updateQuery);\n                ustmt.setString(1, row.getProperty(\"firstName\"));\n                ustmt.setString(2, row.getProperty(\"lastName\"));\n                ustmt.setString(3, row.getProperty(\"email\"));\n                ustmt.setString(4, id);\n                ustmt.executeUpdate();\n            } else {\n                String insertQuery = \"INSERT INTO dir_user (id, username, firstName, lastName, password, email) values (?, ?, ?, ?, 'md5(password)', ?)\";\n                PreparedStatement istmt = con.prepareStatement(insertQuery);\n                istmt.setString(1, id);\n                istmt.setString(2, id);\n                istmt.setString(3, row.getProperty(\"firstName\"));\n                istmt.setString(4, row.getProperty(\"lastName\"));\n                istmt.setString(5, row.getProperty(\"email\"));\n                istmt.executeUpdate();\n            }\n        }\n    } catch (Exception e) {\n        LogUtil.error(\"Sample app - StoreToMultipleSource form\", e, \"Error storing using jdbc\");\n    } finally {\n        try {\n            if(con != null) {\n                con.close();\n            }\n        } catch (SQLException e) {}\n    }\n}\n  \n//call storeData method with injected variables\nreturn storeData(element, rows, formData);\n"
                }
            },
            "visibilityControl": "",
            "visibilityValue": ""
        }
    }],
    "properties": {
        "description": "",
        "id": "idNewEmployer",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "ajouter un nouvelle employé",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "create",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "New_Emp"
    }
}